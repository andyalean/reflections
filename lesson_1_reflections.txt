How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   It enabled to inspect the changes line by line to compare the differences in 
   spelling and syntax.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Mistakes can be easily undone and a assessment of progress can be made from revision to revision.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    If you choose to create commits in git it is more customisable however you mus not forget to commit.
    Automatic commits offer less maintenance however the control of commits is not under the control of users.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    They treat each commit as a seperate version of all files in tht commit and assign it a unique identifer 
    to mark these file changes to this commit.

How can you use the commands git log and git diff to view the history of files?

    git log shows the history of changes in the branch, git diff will compare commits to files and 
    files of branches.

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here